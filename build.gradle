plugins {
    id 'java'
    id 'application'
    id 'net.ltgt.apt' version '0.10'
}

sourceCompatibility = JavaVersion.VERSION_12
targetCompatibility = JavaVersion.VERSION_12

repositories {
    mavenCentral()
}

dependencies {
    // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core
    compile 'org.apache.logging.log4j:log4j-core:2.11.1'
    compile 'org.apache.logging.log4j:log4j-api:2.11.1'
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.dataformat/jackson-dataformat-yaml
    compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: '2.9.7'
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.7'
    compile 'org.slf4j:slf4j-nop:1.7.25'
    // HikariCP is a lightweight and fast JDBC connection pool
    compile 'com.zaxxer:HikariCP:3.2.0'
    // JDBC stuff for connection to MariaDB
    compile 'org.mariadb.jdbc:mariadb-java-client:2.2.6'
    compile 'org.jdbi:jdbi3-core:3.4.0'
    compile 'org.jdbi:jdbi3-stringtemplate4:3.4.0'
    compile 'org.jdbi:jdbi3-sqlobject:3.4.0'
    // Google's JSON library for easy (de)?serialization
    compile 'com.google.code.gson:gson:2.8.5'
    // googles collection library for useful features like hash functions
    compile 'com.google.guava:guava:26.0-jre'
    // Jetty
    compile 'org.eclipse.jetty:jetty-server:9.4.12.RC2'
    compile 'org.eclipse.jetty:jetty-servlet:9.4.12.RC2'
    // apache commons validator
    compile 'commons-validator:commons-validator:1.6'
    // https://mvnrepository.com/artifact/org.jsoup/jsoup
    compile group: 'org.jsoup', name: 'jsoup', version: '1.11.3'
    // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-engine
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.1.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.1.0'
    // lombok
    compileOnly 'org.projectlombok:lombok:1.18.2'
    apt "org.projectlombok:lombok:1.18.2"
}

test {
    useJUnitPlatform()
}

mainClassName = 'org.mahabal.optigrader.api.ApiServer'

jar {
    manifest {
        attributes("Main-Class": mainClassName)
    }

    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}


task runApp(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = mainClassName
}

task dockerRun(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = mainClassName
    args = [
            "test"
    ]
}
